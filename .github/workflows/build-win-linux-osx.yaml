name: Build-Win-Linux-OSX

on: workflow_dispatch

jobs:
  # win-x64
  win-x64-lz4:
    runs-on: windows-2019
    timeout-minutes: 30
    defaults:
      run:
        working-directory: ./src/liblz4
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: 'true'
      - run: rustup target add x86_64-pc-windows-msvc
      - run: cargo build --target x86_64-pc-windows-msvc --release
      - uses: actions/upload-artifact@v3
        with:
          name: win-x64-lz4
          path: ./target/x86_64-pc-windows-msvc/release/lz4.dll

  win-x64-zstd:
    runs-on: windows-2019
    timeout-minutes: 30
    defaults:
      run:
        working-directory: ./src/libzstd
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: 'true'
      - run: rustup target add x86_64-pc-windows-msvc
      - run: cargo build --target x86_64-pc-windows-msvc --release
      - uses: actions/upload-artifact@v3
        with:
          name: win-x64-zstd
          path: ./target/x86_64-pc-windows-msvc/release/zstd.dll

  # linux-x64
  linux-x64-lz4:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    defaults:
      run:
        working-directory: ./src/liblz4
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: 'true'
      - run: rustup target add x86_64-unknown-linux-gnu
      - run: cargo build --target x86_64-unknown-linux-gnu --release
      - uses: actions/upload-artifact@v3
        with:
          name: linux-x64-lz4
          path: ./target/x86_64-unknown-linux-gnu/release/liblz4.so

  linux-x64-zstd:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    defaults:
      run:
        working-directory: ./src/libzstd
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: 'true'
      - run: rustup target add x86_64-unknown-linux-gnu
      - run: cargo build --target x86_64-unknown-linux-gnu --release
      - uses: actions/upload-artifact@v3
        with:
          name: linux-x64-zstd
          path: ./target/x86_64-unknown-linux-gnu/release/libzstd.so     

  # linux-arm64
  linux-arm64-lz4:
    runs-on: ubuntu-latest
    container: ghcr.io/cross-rs/aarch64-unknown-linux-gnu:edge
    timeout-minutes: 30
    env:
      TARGET_CXX: g++
    defaults:
      run:
        working-directory: ./src/liblz4
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: 'true'
      - uses: dtolnay/rust-toolchain@stable
        with:
          target: aarch64-unknown-linux-gnu
      - run: cargo build --target aarch64-unknown-linux-gnu --release
      - uses: actions/upload-artifact@v3
        with:
          name: linux-arm64-lz4
          path: ./target/aarch64-unknown-linux-gnu/release/liblz4.so

  linux-arm64-zstd:
    runs-on: ubuntu-latest
    container: ghcr.io/cross-rs/aarch64-unknown-linux-gnu:edge
    timeout-minutes: 30
    env:
      TARGET_CXX: g++
    defaults:
      run:
        working-directory: ./src/libzstd
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: 'true'
      - uses: dtolnay/rust-toolchain@stable
        with:
          target: aarch64-unknown-linux-gnu
      - run: cargo build --target aarch64-unknown-linux-gnu --release
      - uses: actions/upload-artifact@v3
        with:
          name: linux-arm64-zstd
          path: ./target/aarch64-unknown-linux-gnu/release/libzstd.so     

  # osx-x64
  osx-x64-lz4:
    runs-on: macos-latest
    timeout-minutes: 30
    defaults:
      run:
        working-directory: ./src/liblz4
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: 'true'
      - run: rustup target add x86_64-apple-darwin
      - run: cargo build --target x86_64-apple-darwin --release
      - uses: actions/upload-artifact@v3
        with:
          name: osx-x64-lz4
          path: ./target/x86_64-apple-darwin/release/liblz4.dylib

  osx-x64-zstd:
    runs-on: macos-latest
    timeout-minutes: 30
    defaults:
      run:
        working-directory: ./src/libzstd
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: 'true'
      - run: rustup target add x86_64-apple-darwin
      - run: cargo build --target x86_64-apple-darwin --release
      - uses: actions/upload-artifact@v3
        with:
          name: osx-x64-zstd
          path: ./target/x86_64-apple-darwin/release/libzstd.dylib

  # osx-arm64
  osx-arm64-lz4:
    runs-on: macos-latest
    timeout-minutes: 30
    defaults:
      run:
        working-directory: ./src/liblz4
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: 'true'
      - run: rustup target add aarch64-apple-darwin
      - run: cargo build --target aarch64-apple-darwin --release
      - uses: actions/upload-artifact@v3
        with:
          name: osx-arm64-lz4
          path: ./target/aarch64-apple-darwin/release/liblz4.dylib

  osx-arm64-zstd:
    runs-on: macos-latest
    timeout-minutes: 30
    defaults:
      run:
        working-directory: ./src/libzstd
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: 'true'
      - run: rustup target add aarch64-apple-darwin
      - run: cargo build --target aarch64-apple-darwin --release
      - uses: actions/upload-artifact@v3
        with:
          name: osx-arm64-zstd
          path: ./target/aarch64-apple-darwin/release/libzstd.dylib
    
  # download binary and git push

  git-push:
    needs: [win-x64-lz4, win-x64-zstd, linux-x64-lz4, linux-x64-zstd, linux-arm64-lz4, linux-arm64-zstd, osx-x64-lz4, osx-x64-zstd, osx-arm64-lz4, osx-arm64-zstd]
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v3

      # win-x64
      - uses: actions/download-artifact@v3
        with:
          name: win-x64-lz4
          path: src/NativeCompressions.Lz4/runtimes/win-x64/native/
      - run: mv ./src/NativeCompressions.Lz4/runtimes/win-x64/native/lz4.dll ./src/NativeCompressions.Lz4/runtimes/win-x64/native/liblz4.dll
      - uses: actions/download-artifact@v3
        with:
          name: win-x64-zstd
          path: src/NativeCompressions.ZStandard/runtimes/win-x64/native/
      - run: mv ./src/NativeCompressions.ZStandard/runtimes/win-x64/native/zstd.dll ./src/NativeCompressions.ZStandard/runtimes/win-x64/native/libzstd.dll
    
      # linux-x64
      - uses: actions/download-artifact@v3
        with:
          name: linux-x64-lz4
          path: src/NativeCompressions.Lz4/runtimes/linux-x64/native
      - uses: actions/download-artifact@v3
        with:
          name: linux-x64-zstd
          path: src/NativeCompressions.ZStandard/runtimes/linux-x64/native

      # linux-arm64
      - uses: actions/download-artifact@v3
        with:
          name: linux-arm64-lz4
          path: src/NativeCompressions.Lz4/runtimes/linux-arm64/native
      - uses: actions/download-artifact@v3
        with:
          name: linux-arm64-zstd
          path: src/NativeCompressions.ZStandard/runtimes/linux-arm64/native

      # osx-x64
      - uses: actions/download-artifact@v3
        with:
          name: osx-x64-lz4
          path: src/NativeCompressions.Lz4/runtimes/osx-x64/native
      - uses: actions/download-artifact@v3
        with:
          name: osx-x64-zstd
          path: src/NativeCompressions.ZStandard/runtimes/osx-x64/native

      # osx-arm64
      - uses: actions/download-artifact@v3
        with:
          name: osx-arm64-lz4
          path: src/NativeCompressions.Lz4/runtimes/osx-arm64/native
      - uses: actions/download-artifact@v3
        with:
          name: osx-arm64-zstd
          path: src/NativeCompressions.ZStandard/runtimes/osx-arm64/native

      - run: |
          git config --local user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          git add --all
          git commit -m "Update lz4/zstd lib runtime" -a
      - name: Push changes
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          branch: ${{ github.ref }}