name: Build Native

on:
  workflow_dispatch:
    inputs:
      native:
        description: select which native to build.
        required: true
        type: choice
        default: "zstd"
        options:
          - "zstd"
          - "lz4"
      create-pullrequest:
        description: true to craete PR for artifacts.
        required: true
        type: boolean
        default: false

# OUTPUT_DIR name follow to .NET RID rule. https://docs.microsoft.com/ja-jp/dotnet/core/rid-catalog
# win-x64, linux-x64, osx-x64
# win-x86, linux-x86
# win-arm64, linux-arm64, osx-arm64, ios-arm64

jobs:
  android:
    strategy:
      fail-fast: false
      matrix:
        target: ["x86", "x64", "arm", "arm64"]
    env:
      OUTPUT_DIR: _out/android-${{ matrix.target }}/native
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: true
      - run: git fetch --tags
        working-directory: ${{ inputs.native }}
      - name: Build
        run: bash ./builder/${{ inputs.native }}/${{ inputs.native }}-android-${{ matrix.target }}.sh
      - name: show generated files
        run: git ls-files --other --modified --exclude-standard
      - uses: actions/upload-artifact@v3
        with:
          name: artifact
          path: _out
        if: ${{ inputs.create-pullrequest == true }}

  ios:
    strategy:
      fail-fast: false
      matrix:
        include:
          - target: arm64
            os: macos-latest
    env:
      OUTPUT_DIR: _out/ios-${{ matrix.target }}/native
    runs-on: ${{ matrix.os }}
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: true
      - run: git fetch --tags
        working-directory: ${{ inputs.native }}
      - name: Build
        run: bash ./builder/${{ inputs.native }}/${{ inputs.native }}-ios-arm64.sh
      - name: show generated files
        run: git ls-files --other --modified --exclude-standard
      - uses: actions/upload-artifact@v3
        with:
          name: artifact
          path: _out
        if: ${{ inputs.create-pullrequest == true }}

  linux:
    strategy:
      fail-fast: false
      matrix:
        target: ["x64", "arm64"]
    env:
      OUTPUT_DIR: _out/linux-${{ matrix.target }}/native
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: true
      - run: git fetch --tags
        working-directory: ${{ inputs.native }}
      - name: Build
        run: bash ./builder/${{ inputs.native }}/${{ inputs.native }}-linux-${{ matrix.target }}.sh
      - name: show generated files
        run: git ls-files --other --modified --exclude-standard
      - uses: actions/upload-artifact@v3
        with:
          name: artifact
          path: _out
        if: ${{ inputs.create-pullrequest == true }}

  macos:
    strategy:
      fail-fast: false
      matrix:
        target: ["x64", "arm64"]
    env:
      OUTPUT_DIR: _out/osx-${{ matrix.target }}/native
    runs-on: macos-latest
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: true
      - run: git fetch --tags
        working-directory: ${{ inputs.native }}
      - name: Build
        run: bash ./builder/${{ inputs.native }}/${{ inputs.native }}-darwin-${{ matrix.target }}.sh
      - name: show generated files
        run: git ls-files --other --modified --exclude-standard
      - uses: actions/upload-artifact@v3
        with:
          name: artifact
          path: _out
        if: ${{ inputs.create-pullrequest == true }}

  windows:
    strategy:
      fail-fast: false
      matrix:
        target: ["x64", "x86", "arm64"]
    env:
      OUTPUT_DIR: _out\win-${{ matrix.target }}\native
    runs-on: windows-2022
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: true
      - run: git fetch --tags
        working-directory: ${{ inputs.native }}
      - name: Add MSBuild to PATH
        uses: microsoft/setup-msbuild@v1.1
      - name: Build
        run: builder\${{ inputs.native }}\${{ inputs.native }}-windows-${{ matrix.target }}.bat
        shell: cmd
      - name: show generated files
        run: git ls-files --other --modified --exclude-standard
      - uses: actions/upload-artifact@v3
        with:
          name: artifact
          path: _out
        if: ${{ inputs.create-pullrequest == true }}

  pr:
    if: ${{ inputs.create-pullrequest == true }}
    needs: [android, ios, linux, macos, windows]
    env:
      ARTIFACT_PATH: ./src/NativeCompressions.ZStandard/runtimes/
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: true
      - run: git fetch --tags
        working-directory: ${{ inputs.native }}
      - run: echo "::set-output name=value::$(git tag --points-at HEAD | tr -d '[:space:]')"
        id: version
        working-directory: ${{ inputs.native }}
      - uses: actions/download-artifact@v3
        with:
          name: artifact
          path: _tmp
      - name: Copy to artifact
        run: |
          rm -rf ${{ env.ARTIFACT_PATH }}
          mkdir -p ${{ env.ARTIFACT_PATH }}
          cp -fR ./_tmp/* ${{ env.ARTIFACT_PATH }}
      - name: Check for modified files
        id: git-check
        run: echo "::set-output name=modified::$(if [[ "$(git status --porcelain=v1 2>/dev/null | wc -l)" == "0" ]]; then echo "false"; else echo "true"; fi)"
      - if: steps.git-check.outputs.modified == 'true'
        name: Create PullRequest
        uses: peter-evans/create-pull-request@v4
        with:
          branch: "auto/${{ inputs.native }}_artifact"
          author: github-actions[bot] <41898282+github-actions[bot]@users.noreply.github.com>
          committer: github-actions[bot] <41898282+github-actions[bot]@users.noreply.github.com>
          delete-branch: true
          title: "[${{ inputs.native }}] Update artifacts ${{ steps.version.outputs.value }}"
          body: |
            Update ${{ inputs.native }} build artifacts to ${{ steps.version.outputs.value }} ðŸš€
          labels: |
            automated pr
